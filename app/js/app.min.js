document.addEventListener("DOMContentLoaded", () => {
    new LazyLoad();

    Fancybox.bind("[data-fancybox]", {
        // Your custom options
    });

    if (document.getElementById('homeSlider')) {
        new Swiper('#homeSlider', {
            lazyPreloadPrevNext: 1,
            loop: true,
            autoplay: true,
            speed: 600,
            spaceBetween: 10,
            navigation: {
                nextEl: '.swiper-next',
                prevEl: '.swiper-prev',
            },
            pagination: {
                el: '.home-slider__pagination',
                clickable: true,
            },
        });
    }

    if (document.getElementById('sliderProduct')) {
        let swiperMin = new Swiper("#sliderProductMini", {
            loop: true,
            spaceBetween: 30,
            slidesPerView: 4,
            freeMode: true,
            watchSlidesProgress: true,
        });


        let sliderProduct = new Swiper('#sliderProduct', {
            lazyPreloadPrevNext: 1,
            spaceBetween: 10,
            loop: false,
            pagination: {
                el: '#sliderProduct .swiper-pagination',
                clickable: true,
            },
            thumbs: {
                swiper: swiperMin,
            },
        });
    }

    const numberInp = document.querySelectorAll('.quantity__val');

    numberInp.forEach(input => {
        input.addEventListener('keydown', function (event) {
            // Разрешаем: backspace, delete, tab и escape
            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 ||
                // Разрешаем: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Разрешаем: home, end, влево, вправо
                (event.keyCode >= 35 && event.keyCode <= 39)) {
                // Ничего не делаем
                return;
            } else {
                // Запрещаем все, кроме цифр на основной клавиатуре, а так же Num-клавиатуре
                if ((event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault();
                }
            }
        });
    });

    const jsNumber = document.querySelectorAll('.js-number');

    jsNumber.forEach(input => {
        input.addEventListener('keydown', function (event) {
            // Разрешаем: backspace, delete, tab и escape
            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 ||
                // Разрешаем: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Разрешаем: home, end, влево, вправо
                (event.keyCode >= 35 && event.keyCode <= 39)) {
                // Ничего не делаем
                return;
            } else {
                // Запрещаем все, кроме цифр на основной клавиатуре, а так же Num-клавиатуре
                if ((event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault();
                }
            }
        });
    });

    const slider = document.querySelectorAll('.slider-product');

    slider.forEach(el => {
        let navNextId = '#' + el.dataset.navnext;
        let navPrevId = '#' + el.dataset.navprev;
        let scrollbarId = '#' + el.dataset.scrollbar;
        new Swiper(el, {
            slidesPerView: 4,
            spaceBetween: 30,
            navigation: {
                nextEl: navNextId,
                prevEl: navPrevId,
            },
            scrollbar: {
                el: scrollbarId,
                draggable: true,
            },
            breakpoints: {
                300: {
                    slidesPerView: 'auto',
                    spaceBetween: 20

                },
                574: {
                    slidesPerView: 2,
                    spaceBetween: 20
                },
                991: {
                    slidesPerView: 3,
                    spaceBetween: 20
                },
                1200: {
                    slidesPerView: 4,
                    spaceBetween: 30
                }
            }
        });
    });

    if (document.getElementById('newsSlider')) {
        new Swiper('#newsSlider', {
            lazyPreloadPrevNext: 1,
            /*loop: true,*/
            spaceBetween: 30,
            slidesPerView: 5,
            navigation: {
                nextEl: '#newsSliderNext',
                prevEl: '#newsSliderPrev',
            },
            scrollbar: {
                el: '#newsSlider .swiper-scrollbar',
                draggable: true,
            },
            breakpoints: {

                320: {
                    slidesPerView: 2,
                    spaceBetween: 20
                },
                768: {
                    slidesPerView: 3,
                    spaceBetween: 20
                },
                991: {
                    slidesPerView: 4,
                    spaceBetween: 20
                },
                1200: {
                    slidesPerView: 5,
                    spaceBetween: 30
                }
            }
        });
    }

    if (document.getElementById('specifications')) {
        new Readmore('#specifications', {
            collapsedHeight: 350,
            moreLink: '<div class="more-text-open"><a href="#" class="link-more link-more--right"><span class="link-more__ico"><svg width="6" height="12">\n' +
                '                    <use xlink:href="#svg-next"/>\n' +
                '                </svg></span>Показать все характеристики</a></div>',
            lessLink: '<div class="more-text-close"><a href="#" class="link-more link-more--right"><span class="link-more__ico"><svg width="6" height="12">\n' +
                '                    <use xlink:href="#svg-next"/>\n' +
                '                </svg></span> Скрыть</a></div>'
        });

    }

    if (document.getElementById('seoText')) {
        new Readmore('#seoText', {
            collapsedHeight: 170,
            moreLink: '<div class="more-text-open"><a href="#" class="link-more">Показать <span class="link-more__ico"><svg width="6" height="12">\n' +
                '                    <use xlink:href="#svg-next"/>\n' +
                '                </svg></span></a></div>',
            lessLink: '<div class="more-text-close"><a href="#" class="link-more">Скрыть <span class="link-more__ico"><svg width="6" height="12">\n' +
                '                    <use xlink:href="#svg-next"/>\n' +
                '                </svg></span></a></div>'
        });

    }

    if (document.getElementsByClassName("js-mask-phone").length) {
        const inpMask = document.querySelectorAll('.js-mask-phone');
        inpMask.forEach(el => {
            let im = new Inputmask("+7(999) 999-99-99", {"clearIncomplete": true});
            im.mask(el);
        });
    }


    function getScrollMenu() {
        let el = document.getElementById('fixMenu');
        if (pageYOffset > 250) {
            el.classList.add('active');
        } else {
            el.classList.remove("active");
        }
    }

    getScrollMenu();
    document.addEventListener('scroll', function () {
        getScrollMenu();
    });

    function hiddenMenuLevel2() {
        if (document.querySelector('.menu-level2.active')) {
            document.querySelector('.menu-level2.active').classList.remove('active');
        }
    }

    function hiddenMenuLevel3() {
        if (document.querySelector('.menu-level3.active')) {
            document.querySelector('.menu-level3.active').classList.remove('active');
        }
    }

    const brands = document.querySelectorAll('.brand-modal__nav__item');

    brands.forEach(el => {
        el.addEventListener('mouseover', () => {

            if (!el.classList.contains('active')) {
                if (document.querySelector('.brand-modal__nav__item.active')) {
                    document.querySelector('.brand-modal__nav__item.active').classList.remove('active');
                }
                el.classList.add('active');
                if (document.querySelector('.brand-modal__right__item.active')) {
                    document.querySelector('.brand-modal__right__item.active').classList.remove('active');
                }
                if (document.getElementById(el.dataset.brand)) {
                    document.getElementById(el.dataset.brand).classList.add('active');
                }
            }
        });
    });

    const catalog_level1 = document.querySelectorAll('.catalog-modal__menu-level1');

    catalog_level1.forEach(el => {
        el.addEventListener('mouseover', () => {
            hiddenMenuLevel3();
            if (!el.classList.contains('active')) {
                if (document.querySelector('.catalog-modal__menu-level1.active')) {
                    document.querySelector('.catalog-modal__menu-level1.active').classList.remove('active');
                }
                el.classList.add('active');
                hiddenMenuLevel2();
                if (document.getElementById(el.dataset.nav2)) {
                    document.getElementById(el.dataset.nav2).classList.add('active');
                }
            }
        });
    });

    const catalog_level2 = document.querySelectorAll('.menu-level2 a');

    catalog_level2.forEach(el => {
        el.addEventListener('mouseover', () => {
            if (el.classList.contains('menu-level2__submenu')) {
                if (!el.classList.contains('active')) {
                    hiddenMenuLevel3();
                    if (document.getElementById(el.dataset.level3)) {
                        document.getElementById(el.dataset.level3).classList.add('active');
                    }
                }
            } else {
                if (document.querySelector('.menu-level2__submenu.active')) {
                    document.querySelector('.menu-level2__submenu.active').classList.remove('active');
                }
                hiddenMenuLevel3();
            }
        });
    });

    if (window.screen.width < 574) {
        if (document.getElementById('tabsNavSlider')) {
            new Swiper('#tabsNavSlider', {
                spaceBetween: 20,
                slidesPerView: 'auto',

            });
        }
    }

    if (document.getElementById('searchPc')) {
        const searchPc = new JustValidate('#searchPc', {});
        searchPc.addField('#searchPcInp', [
                {
                    rule: 'required',
                    errorMessage: 'Заполните это поле.',
                }
            ]
        );
    }
    if (document.getElementById('searchMob')) {
        const searchMob = new JustValidate('#searchMob', {});
        searchMob.addField('#searchMobInp', [
                {
                    rule: 'required',
                    errorMessage: 'Заполните это поле.',
                }
            ]
        );
    }
    if (document.getElementById('subscription')) {
        const subscription = new JustValidate('#subscription', {});
        subscription.addField('#subscriptionEmail', [
                {
                    rule: 'required',
                    errorMessage: 'Заполните это поле.',
                },
                {
                    rule: 'email',
                    errorMessage: 'Укажите ваш E-mail',
                }
            ]
        );
    }

    if (document.getElementById('priceRange')) {
        let priceRange = document.getElementById('priceRange');

        noUiSlider.create(priceRange, {
            start: [0, parseInt(priceRange.dataset.maxPrice)],
            step: 1000,
            connect: true,
            format: wNumb({
                decimals: 0,
                thousand: '',
            }),
            range: {
                'min': 0,
                'max': parseInt(priceRange.dataset.maxPrice)
            }
        });

        let priceMin = document.getElementById('priceMin'),
            priceMax = document.getElementById('priceMax');


        priceRange.noUiSlider.on('update', function (values, handle) {
            //priceValue[handle].value = values[handle];
            if (handle == 0) {
                priceMin.value = values[handle];
            } else {
                priceMax.value = values[handle];
            }
        });

        priceMin.addEventListener('change', function () {
            priceRange.noUiSlider.set([this.value, null]);
        });

        priceMax.addEventListener('change', function () {
            priceRange.noUiSlider.set([null, this.value]);
        });
    }

    /* const filter_scroll = document.querySelectorAll('.catalog-filter__item__scroll');
     filter_scroll.forEach(el => {
         if(el.querySelectorAll('li').length > 5) {
             el.classList.add('active');
             //SimpleScrollbar.initEl(el);
         }
     });

     */

    if (document.getElementById('catalogFilterOpen')) {
        document.getElementById('catalogFilterOpen').addEventListener('click', () => {
            document.body.classList.add('filter_open');
            document.getElementById('catalogFilter').classList.add('active');
        });

        document.getElementById('catalogFilterClose').addEventListener('click', () => {
            document.body.classList.remove('filter_open');
            document.getElementById('catalogFilter').classList.remove('active');
        });
    }
    if (document.getElementById('activeFilterSlider')) {
        new Swiper('#activeFilterSlider', {
            lazyPreloadPrevNext: 1,
            loop: false,
            slidesPerView: 'auto',
        });
    }

    const choices = document.querySelectorAll('.js-select');
    choices.forEach(el => {
        new Choices(el, {
            searchChoices: false,
            searchEnabled: false,
        });
    });

    const topNavMenu = document.getElementById('topNavMenu');
    topNavMenu.addEventListener('hidden.bs.collapse', event => {
        document.body.classList.remove('filter_open');
    });
    topNavMenu.addEventListener('show.bs.collapse', event => {
        document.body.classList.add('filter_open');
    });

    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));

    const completeSet = document.querySelectorAll('.complete-set__filter');
    if (completeSet.length > 0) {
        new Swiper('.complete-set__filter', {
            lazyPreloadPrevNext: 1,
            loop: false,
            slidesPerView: 'auto',
            spaceBetween: 20,
        });
    }


    function activeSlideCompare() {
        let compareSlider = new Swiper('#compareSlider', {

            navigation: {
                nextEl: '#compareSliderNext1',
                prevEl: '#compareSliderPrev1',
            },
            slidesPerView: 3,
            spaceBetween: 30,
            //loop: true,
            breakpoints: {
                200: {
                    slidesPerView: 1,
                    spaceBetween: 0,
                    pagination: {
                        el: "#compareSlider .pagination",
                        type: "fraction",
                    },
                },
                768: {
                    slidesPerView: 2,
                    spaceBetween: 20,
                },
                1280: {
                    slidesPerView: 3,
                    spaceBetween: 30,
                },
            },
            on: {
                init: function () {
                    sinfroCompareRow();
                    fixComareSlider();
                },
                resize: function () {
                    sinfroCompareRow();
                }
            },

        });
        let compareMiniSlider = new Swiper('#compareMiniSlider', {
            slidesPerView: 3,
            spaceBetween: 30,
            navigation: {
                nextEl: '#compareSliderMiniNext1',
                prevEl: '#compareSliderMiniPrev1',
            },
            breakpoints: {
                200: {
                    slidesPerView: 1,
                    spaceBetween: 0,
                },
                768: {
                    slidesPerView: 2,
                    spaceBetween: 20,
                },
                1280: {
                    slidesPerView: 3,
                    spaceBetween: 30,
                },
            }
        });

        const swipeAllSliders = (index) => {
            compareSlider.slideToLoop(index);
            compareMiniSlider.slideToLoop(index);
        };

        compareSlider.on('slideChange', () => swipeAllSliders(compareSlider.realIndex));
        compareMiniSlider.on('slideChange', () => swipeAllSliders(compareMiniSlider.realIndex));

    }
    function sinfroCompareRow() {
        let rowCompare = [].slice.call(document.querySelectorAll('.js-compare-props li'))
        rowCompare.forEach(function (e) {
            setEqualHeight(e.dataset.sinhro);
        });


    }

    function fixComareSlider() {
        let boxProps = document.querySelector('#compareSlider .swiper-slide:nth-child(1) .card-product__compare-list');
        let coords = boxProps.getBoundingClientRect();
        console.log(coords.top);

        document.addEventListener('scroll', function () {
            if (pageYOffset > coords.top - 150 && pageYOffset < coords.bottom - 100) {
                document.body.classList.add('fixCompare');
            } else {
                if(document.body.classList.contains('fixCompare')) {
                    document.body.classList.remove('fixCompare');
                }
            }
        });
    }

    function setEqualHeight(elements) {
        var mainDivs = document.getElementsByClassName(elements);
        var maxHeight = 0;
        for (var i = 0; i < mainDivs.length; ++i) {
            if (maxHeight < mainDivs[i].clientHeight) {
                maxHeight = mainDivs[i].clientHeight;
            }
        }
        for (var i = 0; i < mainDivs.length; ++i) {
            mainDivs[i].style.minHeight = maxHeight + "px";
        }
    }

    if (document.getElementById('compareSlider')) {
        activeSlideCompare();

       /* let compareSlider2 = new Swiper('#compareSlider2', {

            navigation: {
                nextEl: '#compareSlider2 .button-next',
                prevEl: '#compareSlider2 .button-prev',
            },
            slidesPerView: 1,
            pagination: {
                el: "#compareSlider2 .pagination",
                type: "fraction",
            },
            on: {
                init: function () {

                },
            }
        });

        compareSlider2.slideTo(1);*/
    }

    let sliderPhotos = document.querySelectorAll('.slider-photos');
    if(sliderPhotos.length > 0) {
        sliderPhotos.forEach((item) => {
            let navPrev = item.parentNode.querySelector('.swiper-prev');
            let navNext = item.parentNode.querySelector('.swiper-next');

            new Swiper(item, {
                spaceBetween: 30,
                slidesPerView: 2,
                navigation: {
                    nextEl: navNext,
                    prevEl: navPrev,
                },
                breakpoints: {
                    200: {
                        slidesPerView: 'auto',
                        spaceBetween: 20,
                    },
                    768: {
                        slidesPerView: 2,
                        spaceBetween: 20,
                    },
                    1280: {
                        slidesPerView: 2,
                        spaceBetween: 30,
                    },
                }
            });
        });
    }


});

function changeFilter(listId, filterVal) {
    let filterInp = filterVal.value.toLowerCase();
    if (document.getElementById(listId)) {
        let listCheck = document.getElementById(listId).querySelectorAll('.catalog-filter__item__list li');
        if (filterInp != '') {
            if (filterVal.parentNode.querySelector('.catalog-filter__item__search__close.hidden')) {
                filterVal.parentNode.querySelector('.catalog-filter__item__search__close.hidden').classList.remove('hidden');
            }
            listCheck.forEach(el => {
                //console.log(el.dataset.filter.toLowerCase().indexOf(filterInp));
                if (el.dataset.filter.toLowerCase().indexOf(filterInp) > -1) {
                    if (el.classList.contains('d-none')) {
                        el.classList.remove('d-none');
                    }
                } else {
                    el.classList.add('d-none');
                }
            });
        } else {
            filterVal.parentNode.querySelector('.catalog-filter__item__search__close').classList.add('hidden');
            listCheck.forEach(el => {
                if (el.classList.contains('d-none')) {
                    el.classList.remove('d-none');
                }
            });
        }
    }
}

function removeSearch(idSearch) {
    let inpSearch = document.getElementById(idSearch);
    if (inpSearch) {
        inpSearch.value = '';
        let event = new Event("input");
        inpSearch.dispatchEvent(event);
    }
}

function showRoomsCity(city, cityTab) {
    document.getElementById('showRoomsCity').innerText=city;
    document.getElementById(cityTab).click();
    console.log(document.getElementById(cityTab));
}

